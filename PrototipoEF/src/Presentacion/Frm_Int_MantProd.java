/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Modelo.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author diego
 */
public class Frm_Int_MantProd extends javax.swing.JInternalFrame {

    /**
     * Creates new form Frm_Int_MantProd
     */
    
    void loadCategorias()
    {
        try
        {
            Conexion con = new Conexion();
            Connection cn = con.getConexion();
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery("SELECT categoria_nombre FROM categoria");
            JCmbCat.removeAllItems();
            while(rs.next()){
                JCmbCat.addItem(rs.getString(1));
            }
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    void loadMarcas()
    {
        try
        {
            Conexion con = new Conexion();
            Connection cn = con.getConexion();
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery("SELECT marca_nombre FROM marca");
            JCmbMarc.removeAllItems();
            while(rs.next()){
                JCmbMarc.addItem(rs.getString(1));
            }
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    public Frm_Int_MantProd() {
        initComponents();
        loadCategorias();
        loadMarcas();
        JBtnAsignar.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPanDesk = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        JTxtCod = new javax.swing.JTextField();
        JCmbCat = new javax.swing.JComboBox<>();
        JCmbMarc = new javax.swing.JComboBox<>();
        JBtnAceptar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTbData = new javax.swing.JTable();
        JBtnAsignar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Agregar Nuevo Producto");
        setToolTipText("");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Database.png"))); // NOI18N

        JPanDesk.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Productos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Corbel", 1, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Corbel", 0, 12)); // NOI18N
        jLabel1.setText("Agregar nuevo producto");

        jLabel2.setFont(new java.awt.Font("Corbel", 0, 12)); // NOI18N
        jLabel2.setText("Código Producto:");

        jLabel3.setFont(new java.awt.Font("Corbel", 0, 12)); // NOI18N
        jLabel3.setText("Categoría:");

        jLabel4.setFont(new java.awt.Font("Corbel", 0, 12)); // NOI18N
        jLabel4.setText("Marca:");

        JTxtCod.setFont(new java.awt.Font("Corbel", 0, 12)); // NOI18N

        JCmbCat.setFont(new java.awt.Font("Corbel", 0, 12)); // NOI18N

        JCmbMarc.setFont(new java.awt.Font("Corbel", 0, 12)); // NOI18N

        JBtnAceptar.setFont(new java.awt.Font("Corbel", 0, 12)); // NOI18N
        JBtnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Check_16x16.png"))); // NOI18N
        JBtnAceptar.setText("Aceptar");
        JBtnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtnAceptarActionPerformed(evt);
            }
        });

        JTbData.setFont(new java.awt.Font("Corbel", 1, 12)); // NOI18N
        JTbData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Almacen", "Producto", "Stock Inicial"
            }
        ));
        jScrollPane1.setViewportView(JTbData);

        JBtnAsignar.setFont(new java.awt.Font("Corbel", 0, 12)); // NOI18N
        JBtnAsignar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Check_16x16.png"))); // NOI18N
        JBtnAsignar.setText("Asignar");
        JBtnAsignar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtnAsignarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JPanDeskLayout = new javax.swing.GroupLayout(JPanDesk);
        JPanDesk.setLayout(JPanDeskLayout);
        JPanDeskLayout.setHorizontalGroup(
            JPanDeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanDeskLayout.createSequentialGroup()
                .addGroup(JPanDeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPanDeskLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(JPanDeskLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(JPanDeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(22, 22, 22)
                        .addGroup(JPanDeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JTxtCod, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JCmbCat, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JCmbMarc, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPanDeskLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(JBtnAceptar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JBtnAsignar)
                .addContainerGap())
        );
        JPanDeskLayout.setVerticalGroup(
            JPanDeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanDeskLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPanDeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(JPanDeskLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(58, 58, 58)
                        .addGroup(JPanDeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(JTxtCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JPanDeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(JCmbCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JPanDeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(JCmbMarc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JBtnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(JBtnAsignar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JPanDesk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JPanDesk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    int idCat(String nomCat)
    {
        int id=0;
        try
        {
            Conexion con = new Conexion();
            Connection cn = con.getConexion();
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery("SELECT id_categoria FROM categoria WHERE categoria_nombre = "+"'"+nomCat+"'");
            
            if(rs.next()){
                id=rs.getInt(1);
            }
            return id;
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex.toString());
            return 0;
        }
    }
    int idMarc(String nomMarc)
    {
        int id=0;
        try
        {
            Conexion con = new Conexion();
            Connection cn = con.getConexion();
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery("SELECT id_marca FROM marca WHERE marca_nombre = "+"'"+nomMarc+"'");
            
            if(rs.next()){
                id=rs.getInt(1);
            }
            return id;
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex.toString());
            return 0;
        }
    }
    boolean verificarTablaAlmacen()
    {
        try
        {
            Conexion con = new Conexion();
            Connection cn = con.getConexion();
            PreparedStatement ps = cn.prepareStatement("SELECT Count(*) FROM almacen");
            int registros=0;
            ResultSet rs;
            rs = ps.executeQuery();
            if(rs.next()){
                registros=rs.getInt(1);
            }
            if(registros>0){
                return true;
            }
            else
            {
                return false;
            }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex.toString());
            return false;
        }
    }
    
    void llenarStock()
    {
        try
        {
            Object[] modelo = new Object[3];
            DefaultTableModel tModelo = (DefaultTableModel) JTbData.getModel();
            String sql1 = "SELECT id_almacen FROM almacen";
            Conexion con = new Conexion();
            Connection cn = con.getConexion();
            PreparedStatement pst1 = cn.prepareStatement(sql1);
            ResultSet rs1 = pst1.executeQuery();
            
            String cod_Producto="";
            cod_Producto = JTxtCod.getText();
            while(rs1.next()){
                modelo[0] = rs1.getString("id_almacen");
                modelo[1] = cod_Producto;
                modelo[2] = "0";
                tModelo.addRow(modelo);
            }
            JTbData.setModel(tModelo);
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }
    
    void asignarStock()
    {
        try
        {
            Conexion con = new Conexion();
            Connection cn = con.getConexion();
            if(JTbData.getRowCount()>0){
                for(int i=0; i<JTbData.getRowCount(); i++){
                    PreparedStatement pst3 = cn.prepareStatement("INSERT INTO stock VALUES(?,?,?)");
 
                    pst3.setString(1, (String)JTbData.getValueAt(i, 0));
                    pst3.setString(2, (String)JTbData.getValueAt(i, 1));
                    pst3.setString(3, (String)JTbData.getValueAt(i, 2));
                    pst3.executeUpdate();
                }
            }
            JOptionPane.showMessageDialog(null, "¡Stock Asignado!");
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }
    private void JBtnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtnAceptarActionPerformed
       if(!JTxtCod.getText().equals(""))
        {
            try
            {
                Conexion con = new Conexion();
                Connection cn = con.getConexion();
                PreparedStatement ps = cn.prepareStatement("INSERT INTO producto VALUES(?,?,?)");
                String codigoProducto=JTxtCod.getText();
                int idCategoria = idCat(JCmbCat.getSelectedItem().toString());
                int idMarca = idMarc(JCmbMarc.getSelectedItem().toString());
                ps.setString(1, codigoProducto);
                ps.setInt(2, idCategoria);
                ps.setInt(3, idMarca);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Producto Registrado", "Información", JOptionPane.INFORMATION_MESSAGE);
               
                if(verificarTablaAlmacen()==true)
                {
                    llenarStock();
                    JBtnAsignar.setVisible(true);
                } 
                else
                {
                    JTxtCod.setText("");
                    JTxtCod.requestFocus();
                    DefaultTableModel modelo = (DefaultTableModel) JTbData.getModel();
                    modelo.setRowCount(0);
                    JTbData.setModel(modelo);
                }
            }
            catch(SQLException ex){
                JOptionPane.showMessageDialog(null, ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
                JTxtCod.requestFocus();
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Campo Vacío", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_JBtnAceptarActionPerformed

    private void JBtnAsignarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtnAsignarActionPerformed
        asignarStock();
        JTxtCod.setText("");
        JTxtCod.requestFocus();
        DefaultTableModel modelo = (DefaultTableModel) JTbData.getModel();
        modelo.setRowCount(0);
        JTbData.setModel(modelo);
        JBtnAsignar.setVisible(false);
    }//GEN-LAST:event_JBtnAsignarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBtnAceptar;
    private javax.swing.JButton JBtnAsignar;
    private javax.swing.JComboBox<String> JCmbCat;
    private javax.swing.JComboBox<String> JCmbMarc;
    private javax.swing.JPanel JPanDesk;
    private javax.swing.JTable JTbData;
    private javax.swing.JTextField JTxtCod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
